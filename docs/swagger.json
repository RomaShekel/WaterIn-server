{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "WaterIn server",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "App for monitoring the amount of water counsumed"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Operations about water."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water Note"
        ],
        "summary": "Update water note by id",
        "operationId": "updateWaterNoteById",
        "description": "Update a water note by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "volume": {
                    "description": "Volume of water consumed in milliliters",
                    "type": "number",
                    "example": 500
                  },
                  "drinkTime": {
                    "description": "Updated time when the water was consumed",
                    "type": "string",
                    "format": "time",
                    "example": "15:30"
                  }
                },
                "required": []
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64a8c29f8c1d8d1a4e8b4567"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the water note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the water note with id 64a8c29f8c1d8d1a4e8b4567"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "description": "Unique identifier for the water note",
                          "type": "string",
                          "example": "64a8c29f8c1d8d1a4e8b4567"
                        },
                        "volume": {
                          "description": "Updated volume of water consumed in milliliters",
                          "type": "number",
                          "example": 600
                        },
                        "drinkTime": {
                          "description": "Updated time when the water was consumed",
                          "type": "string",
                          "format": "time",
                          "example": "15:30"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water note"
        ],
        "summary": "Delete Water note",
        "operationId": "WaterNote",
        "description": "Delete water note by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully delete a water note!"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water Note"
        ],
        "summary": "Create a water note",
        "operationId": "createWaterNote",
        "description": "Create a water note with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "volume",
                  "drinkTime"
                ],
                "properties": {
                  "volume": {
                    "description": "Volume of water consumed in milliliters",
                    "type": "number",
                    "example": 500
                  },
                  "drinkTime": {
                    "description": "Time when the water was consumed",
                    "type": "string",
                    "format": "time",
                    "example": "15:30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a water note",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Seccessufuly add water note!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "volume": {
                          "type": "number",
                          "example": 500
                        },
                        "drinkTime": {
                          "type": "string",
                          "format": "time",
                          "example": "15:30"
                        },
                        "createdAt": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1699209600000
                        },
                        "updatedAt": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1699889600000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user by id",
        "operationId": "getUser",
        "description": "Retrieve the profile information of the currently logged-in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by id",
        "operationId": "upsertsUser",
        "description": "You can update a user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "googl@gmail.com"
                  },
                  "sportHours": {
                    "description": "Hours of sport activities per week",
                    "type": "number",
                    "example": 5
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ]
                  },
                  "weight": {
                    "description": "User's weight in kg",
                    "type": "number",
                    "example": 70
                  },
                  "waterRate": {
                    "description": "User's daily water intake rate in liters",
                    "type": "number",
                    "example": 2.5
                  },
                  "photo": {
                    "description": "User's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a user!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh the authentication token",
        "operationId": "refreshToken",
        "description": "Obtain a new authentication token using a refresh token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "The refresh token used to obtain a new authentication token",
                    "example": "dGhpcyBpcyBhIHJlZnJlc2ggdG9rZW4="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "yKJRYGuruk+EUYeXJyU/+SUMfICpe0NT/say3guZ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Requestr",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request payload"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Format time must be like this 07:30 or 12:30"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Entity not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "password",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "user@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "1234567"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ]
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 70
          },
          "waterRate": {
            "description": "User's daily water intake rate in liters",
            "type": "number",
            "example": 1.5
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "<https://res.cloudinary.com/uqwgdu/image/upload/image.png>"
          }
        }
      }
    }
  }
}